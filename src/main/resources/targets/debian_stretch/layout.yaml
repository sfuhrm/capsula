---
name: Debian Stretch
prepare:
- copy:
    from: Dockerfile
    to: Dockerfile
# clone project
- run:
    command: git clone ${capsula.gitUrl}
# remove .git files
- run:
    command: rm -fr ${capsula.gitProject}/.git ${capsula.gitProject}/.gitignore
- run:
    command: mv ${capsula.gitProject} ${capsula.debian.packageName}_${version.version}
- run:
    command: docker run -v${target}:/target -w/target ${image} tar -czvf ${capsula.debian.packageName}_${version.version}.orig.tar.gz ${capsula.debian.packageName}_${version.version}
- mkdir:
    to: ${capsula.debian.packageName}_${version.version}/debian/${capsula.debian.packageName}/DEBIAN
    mode: rwxrwxrwx
- template:
    from: control.ftl
    to: ${pkgdir}/debian/control
- template:
    from: copyright.ftl
    to: ${pkgdir}/debian/copyright
- template:
    from: changelog.ftl
    to: ${pkgdir}/debian/changelog
- template:
    from: rules.ftl
    to: ${pkgdir}/debian/rules
    mode: rwxr-xr-x
#- template:
#    from: install.ftl
#    to: ${pkgdir}/debian/install
#    mode: rwxr-xr-x
- template:
    from: Makefile.ftl
    to: ${pkgdir}/Makefile
- template:
    from: compat.ftl
    to: ${pkgdir}/debian/compat
build:
# pull or build docker image
<#if use_dockerhub>
<#assign image = dockerhub_image>
- run:
    command: docker pull ${dockerhub_image}
<#else>
<#assign image = image_label>
- run:
    command: docker build . -t ${image}
</#if>
- run:
    command: docker run -v${target}:/target -w/target/${pkgdir} ${image} debuild -us -uc
- run:
    command: docker run -v${target}:/target -w/target/${pkgdir} ${image} chmod -R a+rwx .
packages:
- ${capsula.debian.packageName}_${version.version}-${version.release}_all.deb
